#pragma once

#ifndef _N4409_PARALLELSTL
#define _N4409_PARALLELSTL
#endif

#include <experimental/parallel/execution_policy>
#include <experimental/parallel/detail/sequential_policy.hpp>
#include <experimental/parallel/detail/parallel_policy.hpp>

namespace std          {
namespace experimental {
namespace parallel     {
inline namespace v1    {
 
template<class ExecutionPolicy, class InputIterator, class Function>
auto for_each(ExecutionPolicy &&exec, InputIterator first, InputIterator last, Function f) ->
typename __enable_if_execution_policy<ExecutionPolicy>::type
{
    decay_t<ExecutionPolicy>::for_each(first, last, f);
}

const static sequential_execution_policy seq{};
const static parallel_execution_policy par{};

}
}
}
}


